/*
 * This header is generated by weak_classdump 0.2
 * on Saturday, July 5, 2014 at 1:14:59 AM Mountain Daylight Time
 * Operating System: Version 7.1.1 (Build 11D201)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import "RetryStrategyDelegate.h"
 #import "KikStorage.h"
 #import "KikNetwork.h"
 #import "KikHttpClientController.h"
 #import "KikRetryCountStore.h"

@interface UserManager : NSObject <RetryStrategyDelegate> {
	KikStorage* _storage; 
	KikNetwork* _network; 
	KikHttpClientController* _http; 
	NSMutableArray* _parsedUsers; 
	NSObject* _parsedUsersToCoreDataLock; 
	NSMutableDictionary* _userDetailsRequests; 
	NSMutableDictionary* _requestedProfilePictures; 
	int _currentQueueRequestToken; 
	NSObject* _groupLeaveLock; 
	NSMutableArray* _groupLeaveUsers; 
	BOOL _processingGroupLeave; 
	BOOL _processingQueuedUserDetailRequests; 
	BOOL _shouldFetchAllStubs; 
	NSObject* _updateUnsyncedUsersLock; 
	BOOL _justRegistered; 
	BOOL _connected; 
	BOOL _isUpdatingUsers; 
	id<RetryStrategy> _userUpdateRetryStrategy; 
	KikRetryCountStore* _userUpdateRetryCountStore; 
}
@property (nonatomic,retain) KikStorage* storage; 				//@synthesize storage=_storage - In the implementation block
@property (nonatomic,retain) KikNetwork* network; 				//@synthesize network=_network - In the implementation block
@property (nonatomic,retain) id<RetryStrategy> userUpdateRetryStrategy; 				//@synthesize userUpdateRetryStrategy=_userUpdateRetryStrategy - In the implementation block
@property (assign,getter=isConnected,nonatomic) BOOL connected; 				//@synthesize connected=_connected - In the implementation block
@property (assign,nonatomic) BOOL isUpdatingUsers; 				//@synthesize isUpdatingUsers=_isUpdatingUsers - In the implementation block
@property (nonatomic,retain) KikRetryCountStore* userUpdateRetryCountStore; 				//@synthesize userUpdateRetryCountStore=_userUpdateRetryCountStore - In the implementation block
-(void)loadProfilePictureForUser:(id)arg1;
-(void)updateUnsyncedUsers;
-(void)qosFinished:(id)arg1;
-(void)onEventXmppConnected:(id)arg1;
-(void)parsedUsersToCoreData:(id)arg1 fromSource:(int)arg2;
-(void)fetchRoster;
-(void)retryStrategyDidAdviseRetry:(id)arg1;
-(void)performRosterMaintenance;
-(void)connectionStateDidChange:(id)arg1;
-(void)onCoreInitialized:(id)arg1;
-(void)onUserJustRegistered:(id)arg1;
-(BOOL)getUserDetails:(id)arg1;
-(void)fetchAllStubUserDetails;
-(void)processQueuedGroupLeaveUsers;
-(void)setIsUpdatingUsers:(BOOL)arg1;
-(void)sendUpdateIQ:(id)arg1 withRetryCountEntry:(id)arg2 updateBlock:(id)arg3 rollbackBlock:(id)arg4;
-(void)setUserUpdateRetryStrategy:(id)arg1;
-(void)loadLeavingGroupChats;
-(void)processQueuedUserDetailsRequests;
-(void)queueGetUserDetails:(id)arg1;
-(void)ackMembershipForGroup:(id)arg1;
-(void)queueGroupLeave:(id)arg1;
-(void)flagChatsForBlockedUsers:(BOOL)arg1;
-(void)unflagChatsForUnblockedUsersWithCommit:(BOOL)arg1;
-(void)maybeProcessQueuedUserDetailsRequests;
-(void)getUserDetailsByUsername:(id)arg1 skipLocal:(BOOL)arg2 callback:(id)arg3;
-(void)callbackGetUserDetails:(id)arg1;
-(BOOL)setNonExistantUserInfoResponseAsNonStubUser:(id)arg1;
-(void)fetchRoster:(id)arg1;
-(void)sendFetchRosterIQWithRosterVersion:(id)arg1;
-(void)callbackRosterFetch:(id)arg1;
-(void)processQueuedUserDetailsRequests:(int)arg1;
-(void)flushQueuedParsedUsers;
-(void)updateProfilePicsForUsers:(id)arg1;
-(void)loadProfilePictureForUser:(id)arg1 withSizeIdentifier:(int)arg2 callback:(id)arg3;
-(void)loadProfilePictureForUser:(id)arg1 callback:(id)arg2;
-(void)callbackLoadProfilePicture:(id)arg1;
-(void)groupCreationCallback:(id)arg1;
-(void)groupTimeoutCallback:(id)arg1;
-(void)addToGroupCallback:(id)arg1;
-(void)groupAddTimeoutCallback:(id)arg1;
-(void)callbackAckMembership:(id)arg1;
-(void)expiredAckMembership:(id)arg1;
-(void)leaveGroup:(id)arg1;
-(void)leaveGroupTimeout:(id)arg1;
-(void)leaveGroupDone:(id)arg1;
-(id)initWithStorage:(id)arg1 andNetwork:(id)arg2 andHttp:(id)arg3;
-(void)getUserDetailsByJid:(id)arg1 callback:(id)arg2;
-(void)getUserDetailsByUsername:(id)arg1 callback:(id)arg2;
-(void)loadProfilePictureForUser:(id)arg1 withSizeIdentifier:(int)arg2;
-(void)checkUserProfilePicture;
-(void)resetShouldUpdateProfilePictureFlag;
-(void)createASCIIDisplayNamesForAllUsers;
-(void)createGroupWithUser:(id)arg1 andInviteUser:(id)arg2 andNotify:(id)arg3;
-(void)addUser:(id)arg1 toGroup:(id)arg2 andNotify:(id)arg3;
-(void)wipeAllRetryCounts;
-(void)setStorage:(id)arg1;
-(void)setUserUpdateRetryCountStore:(id)arg1;
-(void)setNetwork:(id)arg1;
-(void)setConnected:(BOOL)arg1;
-(void)setup;
@end